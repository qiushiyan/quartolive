// Generated by CoffeeScript 1.10.0
(function() {
  var Classes,
    slice = [].slice;

  Classes = (function() {
    function Classes() {
      var initial;
      initial = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      this._initial = initial.filter(function(c) {
        return (c != null ? c.length : void 0) > 0;
      });
      this._groups = {};
      this._switches = {};
    }

    Classes.prototype.set = function(name, val) {
      var k, v;
      if (val == null) {
        val = null;
      }
      if (typeof name === 'object') {
        for (k in name) {
          v = name[k];
          this.set(k, v);
        }
        return this;
      }
      if (name[0] === '-') {
        console.warn("Variant specified with leading dash ('" + name + "'). The dashes will be added to the class automatically and should not be included in the `VariantList::add` argument.");
        name = name.substring(1);
      }
      if (val != null) {
        if ((this._groups[name] != null) && this._groups[name] !== val) {
          console.warn("Variant group '" + name + "' overridden");
        }
        this._groups[name] = val;
      } else {
        if ((this._switches[name] != null) && !this._switches[name]) {
          console.warn("Variant switch '" + name + "' overridden");
        }
        this._switches[name] = true;
      }
      return this;
    };

    Classes.prototype.add = function(name, val) {
      var k, v;
      if (val == null) {
        val = null;
      }
      if (typeof name === 'object') {
        for (k in name) {
          v = name[k];
          this.add(k, v);
        }
        return this;
      }
      if (val || arguments.length === 1) {
        if (val === true) {
          val = null;
        }
        this.set(name, val);
      }
      return this;
    };

    Classes.prototype.toString = function() {
      var classes, n, ref, ref1, v;
      classes = [];
      classes.push.apply(classes, this._initial);
      ref = this._switches;
      for (n in ref) {
        v = ref[n];
        classes.push("-" + n);
      }
      ref1 = this._groups;
      for (n in ref1) {
        v = ref1[n];
        classes.push("-" + n + "--" + v);
      }
      return classes.join(' ');
    };

    return Classes;

  })();

  module.exports = Classes;

}).call(this);
